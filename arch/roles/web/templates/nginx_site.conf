upstream api_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/{{ user }}/{{ project_name }}/run/gunicorn.sock fail_timeout=0;
}


# Redirect www to naked
server {
  listen 443 ssl http2;
  listen 80;

  server_name www.{{ hostname }};
  include snippets/certs.conf;
  include snippets/ssl-params.conf;

  return 301 https://{{ hostname }}$request_uri;
}

# Redirect naked http to https
server {
  listen 80;
  server_name {{ hostname }};
  return 301 https://{{ hostname }}$request_uri;
}

# Redirect other https to http
server {
  listen 443 ssl http2;

  server_name default_server;

  include snippets/certs.conf;
  include snippets/ssl-params.conf;

  return 301 http://{{ hostname }}$request_uri;
}

server {
  listen 80;

  server_name default_server;

  client_max_body_size 10M;

  access_log /var/log/nginx/{{ project_name }}.log;
  error_log /var/log/nginx/{{ project_name }}.log;

  location / {
    proxy_pass http://api_wsgi_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }
}

server {
  server_name {{ hostname }};

  listen 443 ssl http2;

  client_max_body_size 10M;

  include snippets/certs.conf;
  include snippets/ssl-params.conf;

  access_log /var/log/nginx/{{ project_name }}.log;
  error_log /var/log/nginx/{{ project_name }}.log;


  location / {
    proxy_pass http://api_wsgi_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }
}
