upstream api_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/{{ user }}/{{ project_name }}/run/gunicorn.sock fail_timeout=0;
}

# Redirect all http to https
server {
  listen 80;
  listen [::]:80;
  server_name www.{{ hostname }} {{ hostname }};
  return 301 https://{{ hostname }}$request_uri;
}

# Other domains
server {
  listen 80;
  listen [::]:80;
  server_name ~^(?<subdomain>[^.]+).wildcard.com;

  access_log /var/log/nginx/$host-access.log;
  error_log  /var/log/nginx/$host-error.log;
}

# Real server
server {
  server_name {{ hostname }};

  if ($host !~* ^({{ hostname }})$ ) {
    return 444;
  }

  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  client_max_body_size 10M;

  include snippets/certs.conf;
  include snippets/ssl-params.conf;

  access_log /var/log/nginx/maasaic.log;
  error_log /var/log/nginx/maasaic.log;

  root /{{ user }}/{{ project_name }}/nginx_templates;

  # TODO: redirect to S3
  # location = /favicon.ico {
  #   alias /web/bee/src/static/img/favicon.png;
  #   access_log off;
  #   add_header Pragma public;
  #   add_header Cache-Control "public";
  # }

  location / {
    if (-f $document_root/maintenance.html) {
      return 503;
    }
    proxy_pass http://api_wsgi_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }
}
