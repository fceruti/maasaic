upstream api_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/{{ user }}/{{ project_name }}/run/gunicorn.sock fail_timeout=0;
}



server {
  server_name _;
  listen 80;
  listen [::]:80;

  client_max_body_size 10M;

  access_log /var/log/nginx/{{ project_name }}_access_80.log;
  error_log /var/log/nginx/{{ project_name }}_error_80.log;

  location / {
    proxy_pass http://api_wsgi_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }
}


server {
  server_name _;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  client_max_body_size 10M;

  include snippets/certs.conf;
  include snippets/ssl-params.conf;

  access_log /var/log/nginx/{{ project_name }}_access_443.log;
  error_log /var/log/nginx/{{ project_name }}_error_443.log;

  location / {
    proxy_pass http://api_wsgi_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }
}


server {
  server_name www.fceruti.com fceruti.com;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  client_max_body_size 10M;

  ssl_certificate /etc/letsencrypt/live/fceruti.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/fceruti.com/privkey.pem;
  include snippets/ssl-params.conf;

  access_log /var/log/nginx/fceruti_access_403.log;
  error_log /var/log/nginx/fceruti_error_443.log;

  location / {
    proxy_pass http://api_wsgi_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }
}
